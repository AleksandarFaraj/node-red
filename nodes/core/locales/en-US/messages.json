{
    
    "common": {
        "label": {
            "payload": "Payload",
            "topic": "Topic",
            "name":"Name",
            "nameph": "name"
        }
    },
    "inject": {
        "inject":"inject",
        "repeat": "repeat = __repeat__",
        "crontab": "crontab = __crontab__",
        "stopped": "stopped",
        "failed": "Inject failed: __error__",
        
        "label": {
            "repeat": "Repeat"
        },
        "timestamp": "timestamp",
        "string": "string",
        "blank": "blank",
        "none":"none",
        "interval":"interval",
        "interval-time":"interval between times",
        "time":"at a specific time",
        "seconds":"seconds",
        "minutes":"minutes",
        "hours":"hours",
        "between":"between",
        "at":"at",
        "and":"and",
        "every":"every",
        "days": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
        ],
        "on":"on",
        "onstart":"Inject once at start?",
        "tip": "<b>Note:</b> \"interval between times\" and \"at a specific time\" will use cron.<br/>See info box for details.",
        "success": "Successfully injected: __label__",
        "error": "<strong>Error</strong>: __message__",
        "errors": {
            "not-deployed": "inject node not deployed",
            "failed": "inject failed, see log for details",
            "no-response": "no response from server",
            "unexpected": "unexpected error (__status__) __message__"
        }
    },
    "catch": {
        "catch": "catch"
    },
    "debug": {
        "debug": "debug",
        "output": "Output",
        "msgprop": "message property",
        "msgobj": "complete msg object",
        "to": "to",
        "debtab": "debug tab",
        "tabcon": "debug tab and console"
    },
    "exec": {
        "exec": "exec",
        "spawnerr": "Spawn command must be just the command - no spaces or extra parameters",
        "badstdout": "Bad STDOUT",
        "command": "Command",
        "commandph": "command",
        "append": "Append",
        "extraparams": "extra input parameters",
        "spawn": "Use spawn() instead of exec() ?",
        "tip": "Tip: <i>spawn</i> expects only one command word - and appended args to be comma separated."
    },
    "function": {
        "function": "function",
        "functionlabel": "Function",
        "outputs": "Outputs",
        "tip": "See the Info tab for help writing functions."
    },
    "template": {
        "template": "template",
        "templatelabel": "Template",
        "property": "Property",
        "templatevalue": "This is the payload: {{payload}} !"
    },
    "delay": {
        "delay": "delay",
        "action": "Action",
        "for": "For",
        "delaymsg": "Delay message",
        "ramdomdelay": "Random delay",
        "limitrate": "Limit rate to",
        "fairqueue": "Topic based fair queue",
        "milisecs": "Miliseconds",
        "secs": "Seconds",
        "sec": "Second",
        "mins": "Minutes",
        "min": "Minute",
        "hours": "Hours",
        "hour": "Hour",
        "days": "Days",
        "day": "Day",
        "between": "Between",
        "rate": "Rate",
        "msgper": "msg(s) per",
        "dropmsg": "drop intermediate messages",
        "delaylabel": "delay",
        "limitlabel": "limit",
        "randomlabel": "ramdom",
        "queuelabel": "queue",
        "msgperlabel": "msg/",
        "buffererr": "buffer exceeded 1000 messages"
    },
    "trigger": {
        "trigger": "trigger",
        "output1": "Output",
        "wait": "then wait",
        "output2": "output",
        "and": "and",
        "below": "the value below",
        "payload": "the existing payload",
        "nothing": "nothing (no output)",
        "milisecs": "Miliseconds",
        "secs": "Seconds",
        "mins": "Minutes",
        "hours": "Hours",
        "notext": "don't extend the timer if retriggered",
        "extend": "extend the timer if retriggered",
        "tip": "Setting the timeout to 0 sets an infinite timeout = single shot.",
        "triggerlabel": "trigger",
        "triggeroncelabel": "trigger once & infinite"
    },
    "comment": {
        "comment": "comment",
        "title": "Title",
        "body": "Body - will be rendered in info tab.",
        "tip1": "Tip: The text here can be styled as ",
        "tip2": "Github flavoured Markdown",
        "commentph": "comment",
        "commentnode": "Comment node",
        "commentinfo": "Use this node to add simple documentation.\n\nAnything you add will be rendered in this info panel.\n\nYou may use Markdown syntax to **enhance** the *presentation*."
    }
}
